

$(document).ready(function (){


	var apiKey = "46445792";
	
	var publisher;
    
    var watchers = 0;
	
	var streamers = 0;

	var dt = new Date();

	$(document).on('change','#fileSwitch' , function(){ 
		if($("#fileSwitch").value != "") {
	   		$(".avatar_error").text("File Ready");
	   		$('#edit_button').prop('disabled', false);
	   		$('#edit_button').css('cursor', 'pointer'); // 'default' to revert
   		};
	});

	// Handling all of our errors here by alerting them
	function handleError(error) {
	  if (error) {
	    alert(error.message);
	  };
	};



	function initializeSession() {


		console.log("*************initializeSession")

		
		if (OT.checkSystemRequirements() == 0) {

			console.log("The client does not support WebRTC.");

		}else {

			var session = OT.initSession(api_key, session_id);

			console.log("api key currently is = " + api_key);

			console.log("session_id_currently is = " + session_id);

			

			// Connect to the session
			session.connect(token, function(error) {
				
				// If the connection is successful, publish to the session
				if (error) {
					//handleError(error);
					console.log("Session.connect error");
					if (error.name === "OT_NOT_CONNECTED") {
				      alert("You are not connected to the internet. Check your network connection.");
				    }

				    puts = "some other error happened";

				} else {
					
					$("#cover_image").detach();
					$("#test_pattern").detach();

					$('.expand_menu_checkbox_overlay').prop('checked', false);
					$('.expand_menu_checkbox_overlay_clone').prop('checked', false);

					$('.expand_menu_checkbox').prop('checked', false);
					$('.hamburger_to_x_checkbox').prop('checked', false);

					session.publish(publisher, handleError);
					console.log("admin connected to session");
				}
			});


			
			//forign user connects to the session
			session.on("connectionCreated", function(event){
				console.log("THIS IS IT" + event.connection.data);

				
				var un = event.connection.data.substr(0, event.connection.data.indexOf('@'));
				alert (un);

				
			 	$('.whos_online ul').append('<li class="'+un+'"><span class="usernames">' +un+ '</span></li>');
				$('.whos_online').scrollTop(  $('.whos_online')[0].scrollHeight   );



      			$('#chat_window').append('<div class="chat_img"></div><div class="chat_name"> ** '+un+'</div><div class="chat_msg">has joined the room **</div>');


			});

			

			// Subscribe to a newly created stream
			session.on('streamCreated', function(event) {

				console.log("New Stream Created");
				console.log(event);

				//session.subscribe(event.stream, 'subscriber', {
				//insertMode: 'append',
				//width: '100%',
				//height: '100%'
				//}, handleError);
			});

			
			
			// Create a publisher
			var publisher = OT.initPublisher('subscriber', {
				insertMode: 'append',
				width: '100%',
				height: '100%'
			}, handleError);

			
			
			session.on("signal", function(event) {
		  		console.log("Signal sent from connection " + JSON.stringify(event));
		  		// Process the event.data property, if there is any data.
		  		
		  		if (event.data.url != ""){
		  			$('#chat_window').append('<div class="chat_img"><img src= ' + event.data.url + '></div>');
				}else{
					$('#chat_window').append('<div class="chat_img"><img src= "/assets/man100px.png"></div>');
				}

				$('#chat_window').append('<div class="chat_name">' + event.data.first + ' ' + event.data.last + '</div>');
				$('#chat_window').append('<div class="chat_msg">' +event.data.msg+ '</div>');
		  		$('#chat_window').scrollTop(  $('#chat_window')[0].scrollHeight );

		  		console.log("*******************************" + $('#chat_window')[0].scrollHeight );
		  		console.log("*******************************" + $('#chat_window')[0].scrollTop );


		  		
				
				if (event.data.url != ""){
		  			$('#overlay').append('<div class="chat_img_overlay"><img src= ' + event.data.url + '></div>');
				}else{
					$('#overlay').append('<div class="chat_img_overlay"><img src= "/assets/man100px.png"></div>');
				}
				$('#overlay').append('<div class="chat_name_overlay">' + event.data.first + ' ' + event.data.last + '</div>');
				$('#overlay').append('<div class="chat_msg_overlay">' +event.data.msg+ '</div>');
		  		$('#overlay').scrollTop(  $('#overlay')[0].scrollHeight );

		  		console.log("*******************************" + $('#overlay')[0].scrollHeight );
		  		console.log("*******************************" + $('#overlay')[0].scrollTop );
			});




			window.sendMSG = function() {       
   
		   		datetext = dt.getHours()+":"+dt.getMinutes();

        		var T = formatAMPM(dt);

				session.signal(
		  			{	

		  				data: { msg: $('#message').val(),
		    			url: avatar,
		    			first: first,
		    			last: last,
		    			time: T}
		  			},
		  			function(error) {
		    			if (error) {
		      				console.log("signal error ("
		                   		+ error.code
		                   		+ "): " + error.message);
		    			} else {
		      				console.log("signal sent.");
		      				//$(".jQTAreaExt").width(0);
		      				//$(".jQTAreaCount").html(0);

		    			}
		  			}
				);
				
				
				$('#message').val("");
				
		    };


		    window.sendMSG_overlay = function() {       
   
		   		datetext = dt.getHours()+":"+dt.getMinutes();

        		var T = formatAMPM(dt);

				session.signal(
		  			{	

		  				data: { msg: $('#message_overlay').val(),
		    			url: avatar,
		    			first: first,
		    			last: last,
		    			time: T}
		  			},
		  			function(error) {
		    			if (error) {
		      				console.log("signal error ("
		                   		+ error.code
		                   		+ "): " + error.message);
		    			} else {
		      				console.log("signal sent.");
		      				//$(".jQTAreaExt").width(0);
		      				//$(".jQTAreaCount").html(0);

		    			}
		  			}
				);
				
				
				$('#message_overlay').val("");
				
		    };
		}
	}






	function subscribe2Session() {


		console.log("*************subscribe2Session")
		
		if (OT.checkSystemRequirements() == 0) {

			console.log("The client does not support WebRTC.");

		}else {

			var session = OT.initSession(api_key, existing_session_id);

			console.log("api key currently is = " + api_key);

			console.log("session_id_currently is = " + existing_session_id);

			

			// Connect to the session
			session.connect(token, function(error) {
				// If the connection is successful, publish to the session
				if (error) {
					//handleError(error);
					console.log("Session.connect error");
					if (error.name === "OT_NOT_CONNECTED") {
				      alert("You are not connected to the internet. Check your network connection.");
				    }

				    puts = "some other error happened";

				} else {
					//session.publish(publisher, handleError);
					console.log("connected to session");
				}
			});


			
			//forign user connects to the session
			session.on("connectionCreated", function(event){
				console.log("nonadmin connectionCreated========" + event);
				
			});

			// Subscribe to a newly created stream
			session.on('streamCreated', function(event) {

				console.log("New Stream Created");
				console.log(event);

				session.subscribe(event.stream, 'subscriber', {
				insertMode: 'replace',
				width: '100%',
				height: '100%'
				}, handleError);
			});

			
			//// Create a publisher
			//var publisher = OT.initPublisher('subscriber', {
			//	insertMode: 'append',
			//	width: '100%',
			//	height: '100%'
			//}, handleError);


			session.on("signal", function(event) {
		  		console.log("Signal sent from connection " + JSON.stringify(event));
		  		// Process the event.data property, if there is any data.
		  		

		  		if (event.data.url != ""){
		  			$('#chat_window').append('<div class="chat_img"><img src= ' + event.data.url + '></div>');
				}else{
					$('#chat_window').append('<div class="chat_img"><img src= "/assets/man100px.png"></div>');
				}
		  		
				$('#chat_window').append('<div class="chat_name">' + event.data.first + ' ' + event.data.last + '</div>');
				$('#chat_window').append('<div class="chat_msg">' +event.data.msg+ '</div>');
		  		$('#chat_window').scrollTop(  $('#chat_window')[0].scrollHeight );

		  		console.log("*******************************" + $('#chat_window')[0].scrollHeight );
		  		console.log("*******************************" + $('#chat_window')[0].scrollTop );
			
		  		
				if (event.data.url != ""){
		  			$('#overlay').append('<div class="chat_img_overlay"><img src= ' + event.data.url + '></div>');
				}else{
					$('#overlay').append('<div class="chat_img_overlay"><img src= "/assets/man100px.png"></div>');
				}


				$('#overlay').append('<div class="chat_name_overlay">' + event.data.first + ' ' + event.data.last + '</div>');
				$('#overlay').append('<div class="chat_msg_overlay">' +event.data.msg+ '</div>');
		  		$('#overlay').scrollTop(  $('#overlay')[0].scrollHeight );

		  		console.log("*******************************" + $('#overlay')[0].scrollHeight );
		  		console.log("*******************************" + $('#overlay')[0].scrollTop );

			});




			window.sendMSG = function() {       
   
		   		datetext = dt.getHours()+":"+dt.getMinutes();

        		var T = formatAMPM(dt);

				
				session.signal(
		  			{	

		  				data: { msg: $('#message').val(),
		    			url: avatar,
		    			first: first,
		    			last: last,
		    			time: T}
		  			},
		  			function(error) {
		    			if (error) {
		      				console.log("signal error ("
		                   		+ error.code
		                   		+ "): " + error.message);
		    			} else {
		      				console.log("signal sent.");
		    			}
		  			}
				);
				
				
				$('#message').val("");
				
		    };window.sendMSG_overlay = function() {       
   
		   		datetext = dt.getHours()+":"+dt.getMinutes();

        		var T = formatAMPM(dt);

				session.signal(
		  			{	

		  				data: { msg: $('#message_overlay').val(),
		    			url: avatar,
		    			first: first,
		    			last: last,
		    			time: T}
		  			},
		  			function(error) {
		    			if (error) {
		      				console.log("signal error ("
		                   		+ error.code
		                   		+ "): " + error.message);
		    			} else {
		      				console.log("signal sent.");
		      				//$(".jQTAreaExt").width(0);
		      				//$(".jQTAreaCount").html(0);

		    			}
		  			}
				);
				
				
				$('#message_overlay').val("");
				
		    };


		}
	}



	
	// if admin is logged in, and wants to start publishing
	$('.publisherStart').click( function (){


		if (goodToGo == "true") {
			console.log("publisher start starting  true");
			initializeSession();
			goodToGo = "false";
		}else{
			console.log("goodToGo was false");

		}
	});


	
	//if non-admin user is logged in or a temp GUEST, start initalSession()
	if (goodToGo == "true" && isAdmin == "false"){
		console.log("is admin is false and user logged in gogogogogo");
			subscribe2Session();

	}


	
	$('.send_button').click( function(){
				
		console.log('buttonclicked');
		sendMSG();
	});

	$('.send_button_overlay').click( function(){
				
		console.log('buttonclicked');
		sendMSG_overlay();
	});
	
	


	$('#message').keyup(function(event){
		if(event.keyCode == 13){
			console.log('enterHitt');
			sendMSG();
		}
	  
	});

	$('#message_overlay').keyup(function(event){
		if(event.keyCode == 13){
			console.log('enterHitt');
			sendMSG_overlay();
		}
	  
	});


	


	function formatAMPM(date) {
	  var hours = date.getHours();
	  var minutes = date.getMinutes();
	  var ampm = hours >= 12 ? 'p' : 'a';
	  hours = hours % 12;
	  hours = hours ? hours : 12; // the hour '0' should be '12'
	  minutes = minutes < 10 ? '0'+minutes : minutes;
	  var formatedTime = hours + ':' + minutes + ampm;
	  return formatedTime;
	}

});
